/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.integration.domain.tables.records;


import cn.vertxup.integration.domain.tables.DDocClause;
import cn.vertxup.integration.domain.tables.interfaces.IDDocClause;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DDocClauseRecord extends UpdatableRecordImpl<DDocClauseRecord> implements VertxPojo, Record17<String, String, String, String, String, String, Integer, Integer, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IDDocClause {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.KEY</code>. 「key」- 条款主键
     */
    @Override
    public DDocClauseRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.KEY</code>. 「key」- 条款主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.NAME</code>. 「name」- 条款标题
     */
    @Override
    public DDocClauseRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.NAME</code>. 「name」- 条款标题
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.TYPE</code>. 「type」- 条款类型
     */
    @Override
    public DDocClauseRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.TYPE</code>. 「type」- 条款类型
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.PREFIX</code>. 「prefix」- 条款前缀
     */
    @Override
    public DDocClauseRecord setPrefix(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.PREFIX</code>. 「prefix」- 条款前缀
     */
    @Override
    public String getPrefix() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.STATUS</code>. 「status」- 状态
     */
    @Override
    public DDocClauseRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.STATUS</code>. 「status」- 状态
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.CONTENT</code>. 「content」-
     * 条款内容（带格式）
     */
    @Override
    public DDocClauseRecord setContent(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.CONTENT</code>. 「content」-
     * 条款内容（带格式）
     */
    @Override
    public String getContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.SORT</code>. 「sort」- 排序
     */
    @Override
    public DDocClauseRecord setSort(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.SORT</code>. 「sort」- 排序
     */
    @Override
    public Integer getSort() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.LEVEL</code>. 「level」- 条款层级
     */
    @Override
    public DDocClauseRecord setLevel(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.LEVEL</code>. 「level」- 条款层级
     */
    @Override
    public Integer getLevel() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.PARENT_ID</code>. 「parentId」-
     * 父条款ID
     */
    @Override
    public DDocClauseRecord setParentId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.PARENT_ID</code>. 「parentId」-
     * 父条款ID
     */
    @Override
    public String getParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public DDocClauseRecord setSigma(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public DDocClauseRecord setLanguage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public DDocClauseRecord setActive(Boolean value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public DDocClauseRecord setMetadata(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public DDocClauseRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public DDocClauseRecord setCreatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public DDocClauseRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.D_DOC_CLAUSE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public DDocClauseRecord setUpdatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.D_DOC_CLAUSE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, String, String, String, Integer, Integer, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<String, String, String, String, String, String, Integer, Integer, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DDocClause.D_DOC_CLAUSE.KEY;
    }

    @Override
    public Field<String> field2() {
        return DDocClause.D_DOC_CLAUSE.NAME;
    }

    @Override
    public Field<String> field3() {
        return DDocClause.D_DOC_CLAUSE.TYPE;
    }

    @Override
    public Field<String> field4() {
        return DDocClause.D_DOC_CLAUSE.PREFIX;
    }

    @Override
    public Field<String> field5() {
        return DDocClause.D_DOC_CLAUSE.STATUS;
    }

    @Override
    public Field<String> field6() {
        return DDocClause.D_DOC_CLAUSE.CONTENT;
    }

    @Override
    public Field<Integer> field7() {
        return DDocClause.D_DOC_CLAUSE.SORT;
    }

    @Override
    public Field<Integer> field8() {
        return DDocClause.D_DOC_CLAUSE.LEVEL;
    }

    @Override
    public Field<String> field9() {
        return DDocClause.D_DOC_CLAUSE.PARENT_ID;
    }

    @Override
    public Field<String> field10() {
        return DDocClause.D_DOC_CLAUSE.SIGMA;
    }

    @Override
    public Field<String> field11() {
        return DDocClause.D_DOC_CLAUSE.LANGUAGE;
    }

    @Override
    public Field<Boolean> field12() {
        return DDocClause.D_DOC_CLAUSE.ACTIVE;
    }

    @Override
    public Field<String> field13() {
        return DDocClause.D_DOC_CLAUSE.METADATA;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return DDocClause.D_DOC_CLAUSE.CREATED_AT;
    }

    @Override
    public Field<String> field15() {
        return DDocClause.D_DOC_CLAUSE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return DDocClause.D_DOC_CLAUSE.UPDATED_AT;
    }

    @Override
    public Field<String> field17() {
        return DDocClause.D_DOC_CLAUSE.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getPrefix();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getContent();
    }

    @Override
    public Integer component7() {
        return getSort();
    }

    @Override
    public Integer component8() {
        return getLevel();
    }

    @Override
    public String component9() {
        return getParentId();
    }

    @Override
    public String component10() {
        return getSigma();
    }

    @Override
    public String component11() {
        return getLanguage();
    }

    @Override
    public Boolean component12() {
        return getActive();
    }

    @Override
    public String component13() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    @Override
    public String component15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    @Override
    public String component17() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getPrefix();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getContent();
    }

    @Override
    public Integer value7() {
        return getSort();
    }

    @Override
    public Integer value8() {
        return getLevel();
    }

    @Override
    public String value9() {
        return getParentId();
    }

    @Override
    public String value10() {
        return getSigma();
    }

    @Override
    public String value11() {
        return getLanguage();
    }

    @Override
    public Boolean value12() {
        return getActive();
    }

    @Override
    public String value13() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    @Override
    public String value15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    @Override
    public String value17() {
        return getUpdatedBy();
    }

    @Override
    public DDocClauseRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public DDocClauseRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DDocClauseRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public DDocClauseRecord value4(String value) {
        setPrefix(value);
        return this;
    }

    @Override
    public DDocClauseRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public DDocClauseRecord value6(String value) {
        setContent(value);
        return this;
    }

    @Override
    public DDocClauseRecord value7(Integer value) {
        setSort(value);
        return this;
    }

    @Override
    public DDocClauseRecord value8(Integer value) {
        setLevel(value);
        return this;
    }

    @Override
    public DDocClauseRecord value9(String value) {
        setParentId(value);
        return this;
    }

    @Override
    public DDocClauseRecord value10(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public DDocClauseRecord value11(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public DDocClauseRecord value12(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public DDocClauseRecord value13(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public DDocClauseRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DDocClauseRecord value15(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DDocClauseRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DDocClauseRecord value17(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public DDocClauseRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Integer value7, Integer value8, String value9, String value10, String value11, Boolean value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDDocClause from) {
        setKey(from.getKey());
        setName(from.getName());
        setType(from.getType());
        setPrefix(from.getPrefix());
        setStatus(from.getStatus());
        setContent(from.getContent());
        setSort(from.getSort());
        setLevel(from.getLevel());
        setParentId(from.getParentId());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IDDocClause> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DDocClauseRecord
     */
    public DDocClauseRecord() {
        super(DDocClause.D_DOC_CLAUSE);
    }

    /**
     * Create a detached, initialised DDocClauseRecord
     */
    public DDocClauseRecord(String key, String name, String type, String prefix, String status, String content, Integer sort, Integer level, String parentId, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(DDocClause.D_DOC_CLAUSE);

        setKey(key);
        setName(name);
        setType(type);
        setPrefix(prefix);
        setStatus(status);
        setContent(content);
        setSort(sort);
        setLevel(level);
        setParentId(parentId);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DDocClauseRecord
     */
    public DDocClauseRecord(cn.vertxup.integration.domain.tables.pojos.DDocClause value) {
        super(DDocClause.D_DOC_CLAUSE);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setType(value.getType());
            setPrefix(value.getPrefix());
            setStatus(value.getStatus());
            setContent(value.getContent());
            setSort(value.getSort());
            setLevel(value.getLevel());
            setParentId(value.getParentId());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public DDocClauseRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
