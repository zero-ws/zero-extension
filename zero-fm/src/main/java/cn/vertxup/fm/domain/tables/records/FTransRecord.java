/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.records;


import cn.vertxup.fm.domain.tables.FTrans;
import cn.vertxup.fm.domain.tables.interfaces.IFTrans;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTransRecord extends UpdatableRecordImpl<FTransRecord> implements VertxPojo, Record18<String, String, String, String, String, String, BigDecimal, BigDecimal, Boolean, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IFTrans {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_TRANS.KEY</code>. 「key」- 交易单主键ID
     */
    @Override
    public FTransRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.KEY</code>. 「key」- 交易单主键ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.NAME</code>. 「name」 - 交易单标题
     */
    @Override
    public FTransRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.NAME</code>. 「name」 - 交易单标题
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.CODE</code>. 「code」 - 交易单编号
     */
    @Override
    public FTransRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.CODE</code>. 「code」 - 交易单编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.SERIAL</code>. 「serial」 - 交易单据号
     */
    @Override
    public FTransRecord setSerial(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.SERIAL</code>. 「serial」 - 交易单据号
     */
    @Override
    public String getSerial() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.TYPE</code>. 「type」 - 交易单类型
     */
    @Override
    public FTransRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.TYPE</code>. 「type」 - 交易单类型
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.STATUS</code>. 「status」 - 交易状态
     */
    @Override
    public FTransRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.STATUS</code>. 「status」 - 交易状态
     */
    @Override
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.AMOUNT</code>. 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public FTransRecord setAmount(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.AMOUNT</code>. 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.AMOUNT_PRE</code>. 「amountPre」预付金额
     */
    @Override
    public FTransRecord setAmountPre(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.AMOUNT_PRE</code>. 「amountPre」预付金额
     */
    @Override
    public BigDecimal getAmountPre() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.PREPAY</code>. 「prepay」- 是否预付
     */
    @Override
    public FTransRecord setPrepay(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.PREPAY</code>. 「prepay」- 是否预付
     */
    @Override
    public Boolean getPrepay() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.COMMENT</code>. 「comment」 - 备注
     */
    @Override
    public FTransRecord setComment(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.COMMENT</code>. 「comment」 - 备注
     */
    @Override
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FTransRecord setSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FTransRecord setLanguage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FTransRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FTransRecord setMetadata(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FTransRecord setCreatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FTransRecord setCreatedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FTransRecord setUpdatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>ZDB.F_TRANS.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FTransRecord setUpdatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<String, String, String, String, String, String, BigDecimal, BigDecimal, Boolean, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<String, String, String, String, String, String, BigDecimal, BigDecimal, Boolean, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FTrans.F_TRANS.KEY;
    }

    @Override
    public Field<String> field2() {
        return FTrans.F_TRANS.NAME;
    }

    @Override
    public Field<String> field3() {
        return FTrans.F_TRANS.CODE;
    }

    @Override
    public Field<String> field4() {
        return FTrans.F_TRANS.SERIAL;
    }

    @Override
    public Field<String> field5() {
        return FTrans.F_TRANS.TYPE;
    }

    @Override
    public Field<String> field6() {
        return FTrans.F_TRANS.STATUS;
    }

    @Override
    public Field<BigDecimal> field7() {
        return FTrans.F_TRANS.AMOUNT;
    }

    @Override
    public Field<BigDecimal> field8() {
        return FTrans.F_TRANS.AMOUNT_PRE;
    }

    @Override
    public Field<Boolean> field9() {
        return FTrans.F_TRANS.PREPAY;
    }

    @Override
    public Field<String> field10() {
        return FTrans.F_TRANS.COMMENT;
    }

    @Override
    public Field<String> field11() {
        return FTrans.F_TRANS.SIGMA;
    }

    @Override
    public Field<String> field12() {
        return FTrans.F_TRANS.LANGUAGE;
    }

    @Override
    public Field<Boolean> field13() {
        return FTrans.F_TRANS.ACTIVE;
    }

    @Override
    public Field<String> field14() {
        return FTrans.F_TRANS.METADATA;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return FTrans.F_TRANS.CREATED_AT;
    }

    @Override
    public Field<String> field16() {
        return FTrans.F_TRANS.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return FTrans.F_TRANS.UPDATED_AT;
    }

    @Override
    public Field<String> field18() {
        return FTrans.F_TRANS.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getSerial();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public BigDecimal component7() {
        return getAmount();
    }

    @Override
    public BigDecimal component8() {
        return getAmountPre();
    }

    @Override
    public Boolean component9() {
        return getPrepay();
    }

    @Override
    public String component10() {
        return getComment();
    }

    @Override
    public String component11() {
        return getSigma();
    }

    @Override
    public String component12() {
        return getLanguage();
    }

    @Override
    public Boolean component13() {
        return getActive();
    }

    @Override
    public String component14() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component15() {
        return getCreatedAt();
    }

    @Override
    public String component16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component17() {
        return getUpdatedAt();
    }

    @Override
    public String component18() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getSerial();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public BigDecimal value7() {
        return getAmount();
    }

    @Override
    public BigDecimal value8() {
        return getAmountPre();
    }

    @Override
    public Boolean value9() {
        return getPrepay();
    }

    @Override
    public String value10() {
        return getComment();
    }

    @Override
    public String value11() {
        return getSigma();
    }

    @Override
    public String value12() {
        return getLanguage();
    }

    @Override
    public Boolean value13() {
        return getActive();
    }

    @Override
    public String value14() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value15() {
        return getCreatedAt();
    }

    @Override
    public String value16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value17() {
        return getUpdatedAt();
    }

    @Override
    public String value18() {
        return getUpdatedBy();
    }

    @Override
    public FTransRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public FTransRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FTransRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FTransRecord value4(String value) {
        setSerial(value);
        return this;
    }

    @Override
    public FTransRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public FTransRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public FTransRecord value7(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public FTransRecord value8(BigDecimal value) {
        setAmountPre(value);
        return this;
    }

    @Override
    public FTransRecord value9(Boolean value) {
        setPrepay(value);
        return this;
    }

    @Override
    public FTransRecord value10(String value) {
        setComment(value);
        return this;
    }

    @Override
    public FTransRecord value11(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public FTransRecord value12(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public FTransRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public FTransRecord value14(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public FTransRecord value15(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FTransRecord value16(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public FTransRecord value17(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public FTransRecord value18(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public FTransRecord values(String value1, String value2, String value3, String value4, String value5, String value6, BigDecimal value7, BigDecimal value8, Boolean value9, String value10, String value11, String value12, Boolean value13, String value14, LocalDateTime value15, String value16, LocalDateTime value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFTrans from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setType(from.getType());
        setStatus(from.getStatus());
        setAmount(from.getAmount());
        setAmountPre(from.getAmountPre());
        setPrepay(from.getPrepay());
        setComment(from.getComment());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFTrans> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FTransRecord
     */
    public FTransRecord() {
        super(FTrans.F_TRANS);
    }

    /**
     * Create a detached, initialised FTransRecord
     */
    public FTransRecord(String key, String name, String code, String serial, String type, String status, BigDecimal amount, BigDecimal amountPre, Boolean prepay, String comment, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(FTrans.F_TRANS);

        setKey(key);
        setName(name);
        setCode(code);
        setSerial(serial);
        setType(type);
        setStatus(status);
        setAmount(amount);
        setAmountPre(amountPre);
        setPrepay(prepay);
        setComment(comment);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FTransRecord
     */
    public FTransRecord(cn.vertxup.fm.domain.tables.pojos.FTrans value) {
        super(FTrans.F_TRANS);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSerial(value.getSerial());
            setType(value.getType());
            setStatus(value.getStatus());
            setAmount(value.getAmount());
            setAmountPre(value.getAmountPre());
            setPrepay(value.getPrepay());
            setComment(value.getComment());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public FTransRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
