/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.doc.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IDQanswer extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.D_QANSWER.REF_ID</code>. 「refId」- 关联考卷中问题实例，对应
     * D_PAPER_REF 表中内容
     */
    public IDQanswer setRefId(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.REF_ID</code>. 「refId」- 关联考卷中问题实例，对应
     * D_PAPER_REF 表中内容
     */
    public String getRefId();

    /**
     * Setter for <code>ZDB.D_QANSWER.ANSWER_ID</code>. 「answerId」- 考卷ID
     */
    public IDQanswer setAnswerId(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.ANSWER_ID</code>. 「answerId」- 考卷ID
     */
    public String getAnswerId();

    /**
     * Setter for <code>ZDB.D_QANSWER.PAPER_ID</code>. 「paperId」- 规则所属考卷ID
     */
    public IDQanswer setPaperId(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.PAPER_ID</code>. 「paperId」- 规则所属考卷ID
     */
    public String getPaperId();

    /**
     * Setter for <code>ZDB.D_QANSWER.TYPE</code>. 「type」- 规则类型
     */
    public IDQanswer setType(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.TYPE</code>. 「type」- 规则类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.D_QANSWER.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public IDQanswer setQuestionId(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public String getQuestionId();

    /**
     * Setter for <code>ZDB.D_QANSWER.IS_REQUIRED</code>. 「isRequired」- 必答题
     */
    public IDQanswer setIsRequired(Boolean value);

    /**
     * Getter for <code>ZDB.D_QANSWER.IS_REQUIRED</code>. 「isRequired」- 必答题
     */
    public Boolean getIsRequired();

    /**
     * Setter for <code>ZDB.D_QANSWER.IS_ATTACHED</code>. 「isAttached」- 附件必须
     */
    public IDQanswer setIsAttached(Boolean value);

    /**
     * Getter for <code>ZDB.D_QANSWER.IS_ATTACHED</code>. 「isAttached」- 附件必须
     */
    public Boolean getIsAttached();

    /**
     * Setter for <code>ZDB.D_QANSWER.IS_PROOF</code>. 「isProof」- 证据必须
     */
    public IDQanswer setIsProof(Boolean value);

    /**
     * Getter for <code>ZDB.D_QANSWER.IS_PROOF</code>. 「isProof」- 证据必须
     */
    public Boolean getIsProof();

    /**
     * Setter for <code>ZDB.D_QANSWER.RULE_SET</code>. 「ruleSet」- 规则分批执行
     */
    public IDQanswer setRuleSet(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.RULE_SET</code>. 「ruleSet」- 规则分批执行
     */
    public String getRuleSet();

    /**
     * Setter for <code>ZDB.D_QANSWER.RULE_CONFIG</code>. 「ruleConfig」- 规则相关配置
     */
    public IDQanswer setRuleConfig(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.RULE_CONFIG</code>. 「ruleConfig」- 规则相关配置
     */
    public String getRuleConfig();

    /**
     * Setter for <code>ZDB.D_QANSWER.RULE_COMPONENT</code>. 「ruleComponent」-
     * 规则执行组件（扩展用）
     */
    public IDQanswer setRuleComponent(String value);

    /**
     * Getter for <code>ZDB.D_QANSWER.RULE_COMPONENT</code>. 「ruleComponent」-
     * 规则执行组件（扩展用）
     */
    public String getRuleComponent();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDQanswer
     */
    public void from(IDQanswer from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDQanswer
     */
    public <E extends IDQanswer> E into(E into);

        @Override
        public default IDQanswer fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setRefId,json::getString,"REF_ID","java.lang.String");
                setOrThrow(this::setAnswerId,json::getString,"ANSWER_ID","java.lang.String");
                setOrThrow(this::setPaperId,json::getString,"PAPER_ID","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setQuestionId,json::getString,"QUESTION_ID","java.lang.String");
                setOrThrow(this::setIsRequired,json::getBoolean,"IS_REQUIRED","java.lang.Boolean");
                setOrThrow(this::setIsAttached,json::getBoolean,"IS_ATTACHED","java.lang.Boolean");
                setOrThrow(this::setIsProof,json::getBoolean,"IS_PROOF","java.lang.Boolean");
                setOrThrow(this::setRuleSet,json::getString,"RULE_SET","java.lang.String");
                setOrThrow(this::setRuleConfig,json::getString,"RULE_CONFIG","java.lang.String");
                setOrThrow(this::setRuleComponent,json::getString,"RULE_COMPONENT","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("REF_ID",getRefId());
                json.put("ANSWER_ID",getAnswerId());
                json.put("PAPER_ID",getPaperId());
                json.put("TYPE",getType());
                json.put("QUESTION_ID",getQuestionId());
                json.put("IS_REQUIRED",getIsRequired());
                json.put("IS_ATTACHED",getIsAttached());
                json.put("IS_PROOF",getIsProof());
                json.put("RULE_SET",getRuleSet());
                json.put("RULE_CONFIG",getRuleConfig());
                json.put("RULE_COMPONENT",getRuleComponent());
                return json;
        }

}
